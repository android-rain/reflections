初始化版本库时会发生什么情况？为什么你需要这样做？
	使用git init，自动创建.git文件夹；为了新建一个代码仓库。

暂存区与工作目录和版本库有何不同？你认为它具有什么价值？
	工作目录 > 版本库 > 暂存区; 它像一辆货车，等装满货后再一起送走（commit）。

如何使用暂存区确保为每项逻辑更改进行一次提交？
	使用git add 将修改过的文件添加到stage area；使用git diff --staged 比较staging area和最后一次commit的文件差异；检查此次变化是否能作为一次逻辑更改。如果是，则提交这次更改。
在哪些情况下，分支可以帮助你有序地组织历史记录？分支将如何提供帮助？
	当我有新的试验性质的想法时，git branch name 可以帮我创建一个项目副本，
	在这个上面的增添或修改不会影响到master 版本。

图表如何帮助你直观显示分支结构？
	图表使用树状结构来显示图形化了的各个分支commit log。

将两个分支合并到一起有何结果？为什么我们在图表中表示它的方式是那样的？
	两个分支的代码与分支前的代码比较，合并新添加的代码到当前分支中。 图表中两个分支最终是相同一个分支，使观察者易于理解。

Git 的自动合并与始终手动进行合并各有何优缺点？
	自动合并速度快，减少了人的工作量，可以不能智能的解决一些代码冲突（如，两个分支对同一段代码进行了修改）；始终手动合并可以确保代码不冲突，但是速度太慢。